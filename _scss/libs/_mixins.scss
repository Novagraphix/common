@import "settings";
@import "compass/css3";
@import "compass/utilities";

.is-hidden {
  display: none;
}

.is-shown, .is-block {
  display: block;
}

.is-uppercase {
  text-transform: uppercase;
  letter-spacing: 1px;
}

.is-lowercase {
  text-transform: lowercase;
}

// List styles
// -------------------------------------------------------

// Mixins for list style types
@mixin unordered {
list-style-position: outside;
list-style-type: disc;
}

@mixin unordered-inside {
list-style-position: inside;
list-style-type: disc;
}

@mixin ordered {
list-style-position: outside;
list-style-type: decimal;
}

@mixin ordered-inside {
list-style-position: inside;
list-style-type: decimal;
}

@mixin nobullet {
list-style-type: none;
}


// Retina images.
// Use with care - http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
// -------------------------------------------------------

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin transition($string: all 0.3s ease-out) {
    -webkit-transition: $string;
    -moz-transition:    $string;
    -ms-transition:     $string;
    -o-transition:      $string;
    transition:         $string;
}

@mixin link($string: all 0.3s ease-out) {
    -webkit-transition: $string;
    -moz-transition:    $string;
    -ms-transition:     $string;
    -o-transition:      $string;
    transition:         $string;
    position: relative;
    padding: .5em;
    margin: -.5em;
}

@mixin placement($position: absolute, $top:auto, $right:auto, $bottom:auto, $left:auto) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin scale($string: 1.1) {
    -webkit-transform: scale($string);
    -moz-transform: scale($string);
    -o-transform: scale($string);
    -ms-transform: scale($string);
    transform: scale($string);
}

@mixin google-font($family, $styles: (), $protocol: http) {

  $url: "http://fonts.googleapis.com/css?family=";

  @if $protocol == https {
    $url: "https://fonts.googleapis.com/css?family=";
  }

  $f: 0;

  @each $word in $family {
    $f: $f + 1;
    $url: $url + $word;

    @if $f < length($family) {
      $url: $url + "+";
    }
  }

  @if length($styles) == 0 {
    @import url(#{$url});
  }
  @else {
    $s: 0;
    $url: $url + ":";

    @each $style in $styles {
      $s: $s + 1;
      $url: $url + $style;

      @if $s < length($styles) {
        $url: $url + ",";
      }
    }
    @import url(#{$url});
  }
}

// Examples:

// @include google-font(Open Sans);
// Output:
// @import url(//fonts.googleapis.com/css?family=Open+Sans);

// @include google-font(Open Sans,(400,300,600,700));
// Output:
// @import url(//fonts.googleapis.com/css?family=Open+Sans:400,300,600,700);

// Important!
// - Each Family should be separated in it's own mixin
// - Do not put anything in quotes