@import "settings";
@import "compass/css3";
@import "compass/utilities";

.is-hidden {
  display: none;
}

.is-shown, .is-block {
  display: block;
}

.is-uppercase {
  text-transform: uppercase;
  letter-spacing: 1px;
}

.is-lowercase {
  text-transform: lowercase;
}

.clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
.pull-left {
  float: left !important;
}
.pull-right {
  float: right !important;
}
// Retina images.
// Use with care - http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
// -------------------------------------------------------

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin transition($string: all 0.3s ease-out) {
    -webkit-transition: $string;
    -moz-transition:    $string;
    -ms-transition:     $string;
    -o-transition:      $string;
    transition:         $string;
}
@mixin scale($string: 1.1) {
  -moz-transform: scale($string);
  -webkit-transform: scale($string);
  -o-transform: scale($string);
  -ms-transform: scale($string);
  transform: scale($string);
}

@mixin link($string: all 0.3s ease-out) {
    -webkit-transition: $string;
    -moz-transition:    $string;
    -ms-transition:     $string;
    -o-transition:      $string;
    transition:         $string;
    position: relative;
    padding: .5em;
    margin: -.5em;
}

@mixin placement($position: absolute, $top:auto, $right:auto, $bottom:auto, $left:auto) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}
@mixin justify($wordspacing: .02em) {
    text-align: justify; 
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
    word-spacing:$wordspacing;
    text-rendering: optimizeLegibility; 
}
@mixin justify-reset() {
    text-align: left; 
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
    word-spacing:auto;
    text-rendering: optimizeLegibility; 
}

@mixin vertical-center {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
@mixin vertical-bottom {
  position: relative;
  top:100%;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
}
@mixin vertical-reset {
  position: relative;
  top:auto;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none!important;
}

@mixin center-center {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  left: 50%!important;
  transform: translateX(-50%);
}
@mixin img-stretch-container {
  min-height:100%; 
  width:auto;
}

@mixin rotate( $degrees ) {
  -webkit-transform: rotate(#{$degrees}deg);
  -moz-transform: rotate(#{$degrees}deg);
  -ms-transform: rotate(#{$degrees}deg);
  -o-transform: rotate(#{$degrees}deg);
  transform: rotate(#{$degrees}deg);

  filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
  zoom: 1;
 }